
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://fxzamjowvpnyuxthusib.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ4emFtam93dnBueXV4dGh1c2liIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDExNDc1NzYsImV4cCI6MjA1NjcyMzU3Nn0.2Af0kisQhmBsH22EsWOEuUtbUPziFk-U3MLGuHx8Nj4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
    },
    db: {
      schema: 'public',
    },
  }
);

// Helper for getting the current user
export const getCurrentUser = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return session?.user || null;
};

// Helper for checking if user is authenticated
export const isAuthenticated = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return !!session;
};

// Helper to get the appropriate callback URL based on environment
export const getCallbackUrl = () => {
  // Use the Supabase project URL for the callback
  return `${SUPABASE_URL}/auth/v1/callback`;
};

// Helper to store OAuth tokens in the platform_connections table
export const storeOAuthTokens = async (
  userId: string,
  platform: "twitter" | "instagram", 
  accessToken: string, 
  refreshToken: string,
  username: string
) => {
  // Store the tokens in the platform_connections table
  return await supabase
    .from('platform_connections')
    .upsert({
      user_id: userId,
      platform,
      access_token: accessToken,
      refresh_token: refreshToken,
      username,
      connected: true,
      updated_at: new Date().toISOString()
    });
};
