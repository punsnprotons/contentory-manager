
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://fxzamjowvpnyuxthusib.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ4emFtam93dnBueXV4dGh1c2liIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDExNDc1NzYsImV4cCI6MjA1NjcyMzU3Nn0.2Af0kisQhmBsH22EsWOEuUtbUPziFk-U3MLGuHx8Nj4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
      detectSessionInUrl: true, // This is needed to handle OAuth redirects properly
      flowType: 'pkce', // Use PKCE flow for better security
    },
    realtime: {
      params: {
        eventsPerSecond: 10,
      },
    },
    db: {
      schema: 'public',
    },
    global: {
      headers: {
        'X-Client-Info': 'lovable-app',
      },
    },
  }
);

// Helper for getting the current user
export const getCurrentUser = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return session?.user || null;
};

// Helper for checking if user is authenticated
export const isAuthenticated = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return !!session;
};

// Helper for getting the current session
export const getCurrentSession = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return session;
};

// Helper for getting the current access token
export const getAccessToken = async () => {
  const { data: { session } } = await supabase.auth.getSession();
  return session?.access_token || null;
};

// Helper to call Twitter API with proper headers
export const callTwitterApi = async (path: string, body?: any) => {
  const accessToken = await getAccessToken();
  
  if (!accessToken) {
    throw new Error('Authentication required to access Twitter API');
  }
  
  console.log(`Calling Twitter API: ${path} with OAuth 1.0a`);
  
  return supabase.functions.invoke('twitter-api', {
    method: 'POST',
    headers: {
      path,
      Authorization: `Bearer ${accessToken}`
    },
    body
  });
};
